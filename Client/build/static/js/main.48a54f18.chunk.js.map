{"version":3,"sources":["Props.jsx","Submit_Page.jsx","Popup.js","Another-page.js","Loginpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Props","props","console","log","name","Submit_Page","useState","doctor","setdoctor","gloves","setgloves","size","setsize","selected","setselected","hospital","sethospital","fetch","then","rs","json","data","res","d","abhimanyu","rows","map","G_name","nitin","G_items","type","options","h","el","G_size","ort_no","id","setid","a","alert","Axios","post","Uid","localStorage","getItem","portno","location","setTimeout","window","history","forward","onunload","pushState","Location","href","onpopstate","go","className","htmlFor","onChange","e","target","value","Dr_id","Dr_name","onClick","document","getElementsByClassName","innerHTML","setItem","style","color","borderRadius","background","cursor","border","marginLeft","item","G_id","company_name","marginRight","placeholder","display","position","top","to","Popup","useEffect","p","getElementsByTagName","att","createAttribute","setAttributeNode","Anotherpage","history1","useHistory","getdata","setgetdata","error","message","reduce","sum","querySelectorAll","forEach","element","includes","remove","push","filter","dt","left","width","marginBottom","undefined","Company_name","Loginpage","user","setuser","usern","setusern","passw","setpassw","method","headers","v","getElementById","TextField","InputProps","endAdornment","IconButton","info","username","password","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.48a54f18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Props = (props) => {\r\n    console.log(props.name)\r\n    return (\r\n        \r\n            <option>{props.name}</option>\r\n        \r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Props } from './Props';\r\nimport Axios from 'axios';\r\nexport const Submit_Page = () => {\r\n\r\n    let [doctor, setdoctor] = useState()\r\n    let [gloves, setgloves] = useState()\r\n    let [size, setsize] = useState()\r\n    let [selected, setselected] = useState()\r\n    let [hospital, sethospital] = useState()\r\n    // let [post, setpost] = useState(\"\")\r\n\r\n    // console.log(gloves)\r\n    !doctor && fetch('/doctor').then((rs) => {\r\n        rs.json().then((data) => {\r\n            setdoctor(data);\r\n        });\r\n    });\r\n\r\n    !gloves && fetch('/gloves').then((res) => {\r\n        res.json().then((d) => {\r\n            setgloves(d);\r\n        });\r\n    });\r\n    // !post && fetch('/get').then((rs) => {\r\n    //     rs.json().then((dt) => {\r\n    //         setpost(dt);\r\n    //     });\r\n    // });\r\n    // console.log('-------------',post)\r\n    function drlist(e) {\r\n        setselected(e.target.value)\r\n    }\r\n\r\n    function hospitallist(e) {\r\n        sethospital(e.target.value)\r\n    }\r\n\r\n    const abhimanyu = gloves && gloves.rows.map((data) => {\r\n        return data.G_name\r\n    })\r\n\r\n    const nitin = gloves && gloves.rows.map((data) => {\r\n        return data.G_items\r\n    })\r\n\r\n    let type = null;\r\n    let options = null;\r\n    let dr = \"no record\";\r\n\r\n\r\n    if (hospital === \"1\") {\r\n        type = abhimanyu;\r\n    } else if (hospital === \"2\") {\r\n        type = nitin;\r\n    } else if (hospital === \"3\") {\r\n        type = abhimanyu;\r\n    } else if (hospital === \"4\") {\r\n        type = nitin;\r\n    }\r\n\r\n    let h = \"\";\r\n    if (hospital == \"1\") {\r\n        h = doctor.rows[1].hospital\r\n    } else if (hospital == \"2\") {\r\n        h = doctor.rows[2].hospital\r\n    } else if (hospital == \"3\") {\r\n        h = doctor.rows[3].hospital\r\n    } else if (hospital == \"4\") {\r\n        h = doctor.rows[4].hospital\r\n    }\r\n\r\n    if (type) {\r\n        options = type.map((el) => <option key={el}>{el}</option>);\r\n    }\r\n    console.log(options);\r\n    let ratio = \"\";\r\n    let ortno = \"\";\r\n    if (size === \"Hand Sanatizer\" || size == \"rubber gloves\") {\r\n        ratio = gloves.rows[0].G_size\r\n        ortno = gloves.rows[0].ort_no\r\n    } else if (size === \"Sergical Mask\" || size == \"Hot waterbag\") {\r\n        ratio = gloves.rows[1].G_size\r\n        ortno = gloves.rows[1].ort_no\r\n    } else if (size === \"Bed\" || size == \"stethoscope\") {\r\n        ratio = gloves.rows[2].G_size\r\n        ortno = gloves.rows[2].ort_no\r\n    } else if (size === \"Patient clothes\" || size == \"Pulse oximeter\") {\r\n        ratio = gloves.rows[3].G_size\r\n        ortno = gloves.rows[3].ort_no\r\n    } else if (size === \"Patient Room\" || size == \"Thermometer\") {\r\n        ratio = gloves.rows[4].G_size\r\n        ortno = gloves.rows[4].ort_no\r\n    } else if (size === \"blood pressure meter\" || size == \"Ice bag\") {\r\n        ratio = gloves.rows[5].G_size\r\n        ortno = gloves.rows[5].ort_no\r\n    }\r\n    function valuechange(e) {\r\n        setsize(e.target.value)\r\n    }\r\n    const check = () => {\r\n\r\n        if (selected == \"Dr.hardik\" || selected == \"Dr.tarun\" || selected == \"Dr.nitin\" || selected == \"Dr.abhimanyu\" && hospital == \"1\" || hospital == \"2\" || hospital == \"3\" || hospital == \"4\") {\r\n            document.getElementsByClassName('list')[0].innerHTML = \"Hospital name :\" + h;\r\n            document.getElementsByClassName('list')[1].innerHTML = \"Surgeon name :\" + selected;\r\n            localStorage.setItem('drname', selected)\r\n        }\r\n        else {\r\n            document.getElementsByClassName('list').innerHTML = \"\"\r\n        }\r\n    }\r\n    const [id, setid] = useState()\r\n    // console.log(id)\r\n    async function fetchdata() {\r\n        if (options === null) {\r\n            alert(\"does not selected...\")\r\n        } else {\r\n            try {\r\n                await Axios.post(\"/login/server\", {\r\n                    Uid: localStorage.getItem('id') || localStorage.getItem('id1'),\r\n                    h: localStorage.getItem('h'),\r\n                    selected: localStorage.getItem('selected'),\r\n                    G_name: localStorage.getItem('G_name') || localStorage.getItem('G_name1'),\r\n                    G_size: localStorage.getItem('G_size') || localStorage.getItem('G_size1'),\r\n                    portno: localStorage.getItem('ort_no') || localStorage.getItem('ort_no1'),\r\n                    G_items: localStorage.getItem('G_items') || localStorage.getItem('G_items1'),\r\n                    location: localStorage.getItem('location') || localStorage.getItem('location1')\r\n                }).then((rs) => {\r\n                    console.log(\"successfully insert...\")\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n    function back() {\r\n        window.history.forward();\r\n    }\r\n    setTimeout(back(), 0);\r\n    window.onunload = function () { };\r\n    window.history.pushState(null, null, Location.href);\r\n    window.onpopstate = function () {\r\n        window.history.go(1);\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <fieldset className=\"container\">\r\n                    <legend className=\"center\">Welcome</legend>\r\n                    <div className=\"center\">\r\n                        <label>Mariola()</label><br></br>\r\n                        <label className=\"list\"></label>\r\n                        <label className=\"list\"></label>\r\n\r\n                        <label htmlFor=\"surgeon\" className=\"dropdown\"> Hospital</label>\r\n                        <select name=\"surgeon\" id=\"surgeon\" className=\"dropdown\" onChange={hospitallist}>\r\n                            {\r\n                                doctor && doctor.rows.map((d) => {\r\n                                    return <option key={d.Dr_id} value={d.Dr_id}>{d.hospital}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <label htmlFor=\"surgeon\" className=\"dropdown\">Select surgeon</label>\r\n                        <select name=\"surgeon\" id=\"surgeon\" className=\"dropdown\" onChange={drlist}>\r\n                            {\r\n                                doctor && doctor.rows.map((d) => {\r\n                                    return <option key={d.Dr_id} value={d.Dr_name}>{d.Dr_name}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                        <label htmlFor=\"preference\" className=\"dropdown\">preference</label>\r\n                        <select name=\"preference\" className=\"dropdown\" onChange={valuechange}>\r\n                            {options}\r\n                        </select>\r\n\r\n                        <button type='button' onClick={check} className=\"dropdown\" style={{\r\n                            color: \"blue\",\r\n                            borderRadius: \"22px\",\r\n                            background: \"borderBox\",\r\n                            cursor: \"pointer\"\r\n                        }}>Check</button>\r\n                        <div>\r\n                            <div>\r\n                                {size === \"Hand Sanatizer\" || size == \"rubber gloves\" || size === \"blood pressure meter\" || size == \"Ice bag\" || size === \"Patient Room\" || size == \"Thermometer\" || size === \"Patient clothes\" || size == \"Pulse oximeter\" || size === \"Bed\" || size == \"stethoscope\" || size === \"Sergical Mask\" || size == \"Hot waterbag\" ? (\r\n                                    <table border={1} className=\"table\" style={{ marginLeft: \"12%\" }}>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th className='th'>S no</th>\r\n                                                <th className='th' id=\"hn\">Hospital name</th>\r\n                                                <th className='th' id=\"sn\">Surgeon name</th>\r\n                                                <th className='th'>Preference</th>\r\n                                                <th className='th'>size</th>\r\n                                                <th className='th'>Port no</th>\r\n                                                <th className='th'>Company name</th>\r\n                                                <th className='th'>Location</th>\r\n                                            </tr>\r\n                                            {gloves.rows.map(item => {\r\n                                                if (item.G_name == size) {\r\n                                                    return (\r\n                                                        <tr key={item.G_id}>\r\n                                                            <td className=\"td\" value={id} onChange={() => { setid(item.G_id) }}>{item.G_id}{localStorage.setItem('id', item.G_id)} </td>\r\n                                                            {selected == \"Dr.hardik\" || selected == \"Dr.tarun\" || selected == \"Dr.nitin\" || selected == \"Dr.abhimanyu\" ?\r\n                                                                (<><td>{h}</td>{localStorage.setItem('h', h)}\r\n                                                                    <td>{selected}</td>{localStorage.setItem('selected', selected)}</>) : \" \"\r\n                                                            }\r\n                                                            <td className=\"td\">{item.G_name}{localStorage.setItem('G_name', item.G_name)}</td>\r\n                                                            <td className=\"td\">{item.G_size}{localStorage.setItem('G_size', item.G_size)}</td>\r\n                                                            <td className=\"td\">{item.ort_no}{localStorage.setItem('ort_no', item.ort_no)}</td>\r\n                                                            <td className=\"td\">{item.company_name}{localStorage.setItem('G_items', item.company_name)}</td>\r\n                                                            <td className=\"td\">{item.location}{localStorage.setItem('location', item.location)}</td>\r\n\r\n                                                        </tr>\r\n                                                    );\r\n                                                }\r\n                                                else if (item.G_items == size) {\r\n                                                    localStorage.setItem('size', item.G_id)\r\n                                                    return (\r\n                                                        <tr key={item.G_id} value={item.G_id}>\r\n                                                            <td>{item.G_id}{localStorage.setItem('id1', item.G_id)}</td>\r\n                                                            {selected == \"Dr.hardik\" || selected == \"Dr.tarun\" || selected == \"Dr.nitin\" || selected == \"Dr.abhimanyu\" ?\r\n                                                                (<><td>{h}</td>{localStorage.setItem('h', h)}\r\n                                                                    <td>{selected}</td>{localStorage.setItem('selected', selected)}</>) : \" \"\r\n                                                            }\r\n                                                            <td>{item.G_items}{localStorage.setItem('G_items1', item.G_items)}</td>\r\n                                                            <td>{item.G_size}{localStorage.setItem('G_size1', item.G_size)}</td>\r\n                                                            <td>{item.ort_no}{localStorage.setItem('ort_no1', item.ort_no)}</td>\r\n                                                            <td>{item.company_name}{localStorage.setItem('G_name1', item.company_name)}</td>\r\n                                                            <td>{item.location}{localStorage.setItem('location1', item.location)}</td>\r\n\r\n                                                        </tr>\r\n                                                    );\r\n                                                }\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className=\"add_required\">\r\n                                <span><h1>&#8853; Add Your Required</h1></span>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                <label style={{ marginRight: \"10%\", color: \"brown\" }}>Surgeon First Name</label><br></br>\r\n                                <input type=\"text\" placeholder=\"Enter First Name...\" className=\"text-field\"></input>\r\n\r\n                                <label style={{ marginRight: \"10%\", color: \"brown\", display: \"block\", position: \"relative\", top: \"23px\" }}>Surgeon Last Name</label><br></br>\r\n                                <input type=\"text\" placeholder=\"Enter Last Name...\" className=\"text-field\"></input><br></br><br></br>\r\n                            </div>\r\n                            <div>\r\n                                <select name=\"preference\" className=\"drop-down-two\">\r\n                                    <option >Gloves</option>\r\n                                    <option value=\"\">Mask is required</option>\r\n                                    <option value=\"\">Hand santize</option>\r\n                                    <option value=\"\">Surgical Gloves</option>\r\n                                    <option value=\"\">Be healthy</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <select name=\"preference\" className=\"drop-down-two\">\r\n                                    <option >Different Gloves to select</option>\r\n                                    <option value=\"\">Mask is required</option>\r\n                                    <option value=\"\">Hand santize</option>\r\n                                    <option value=\"\">Surgical Gloves</option>\r\n                                    <option value=\"\">Be healthy</option>\r\n                                </select>\r\n                            </div>\r\n                            <Link to=\"/detail\"><button id=\"submit\" onClick={fetchdata}>Submit</button></Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </fieldset>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport './App.css'\r\nimport { Props } from './Props'\r\n\r\nexport const Popup = () => {\r\n\r\n    useEffect(() => {\r\n        var p = document.getElementsByTagName(\"p\")[0];\r\n        var att = document.createAttribute(\"class\");\r\n        att.value = \"pop-up\";\r\n        p.setAttributeNode(att);\r\n    })\r\n\r\n    return (\r\n\r\n        <p><Props name={localStorage.getItem('selected')} /> Use the below equipment for this craitaria</p>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './App.css'\r\nimport { Popup } from './Popup'\r\nimport { Props } from './Props.jsx'\r\nimport { useHistory } from 'react-router'\r\nexport const Anotherpage = () => {\r\n\r\n    const history1 = useHistory()\r\n\r\n    const [getdata, setgetdata] = useState();\r\n    try {\r\n        !getdata && fetch('/get').then((rs) => {\r\n             rs.json().then((data) => {\r\n                setgetdata(data)\r\n            });\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n    console.log('**tttt**', typeof getdata)\r\n    function logout() {\r\n        history1.push('/')\r\n    }\r\n    // window.history.forward();\r\n    // window.onunload = function () { };\r\n    window.history.pushState(null, null, Location.href);\r\n    // window.onpopstate = function () {\r\n    //     window.history.go(1);\r\n    // };\r\n    const total = [3, 2].reduce((sum, value) => console.log(sum - value),2)\r\n    console.log('$$$$$',getdata)\r\n\r\n    const options=[]\r\n    document.querySelectorAll('#select > option').forEach(element => {\r\n        if (options.includes(element.value)) {\r\n            element.remove()\r\n        } else {\r\n            options.push(element.value)\r\n        }\r\n    });\r\n    return (\r\n        <div>\r\n            <button id=\"logout\" onClick={() => logout()}><a>Log out</a></button>\r\n            <div className=\"dp-container\">\r\n                <label className=\"dp-label\">Surgeon</label>\r\n                <select className=\"dp-child\" id='select'>\r\n                    {\r\n                        getdata && getdata.rows.filter(dt => dt.selected).map((d) => {\r\n                            return (\r\n                                <option id='option'>{d.selected}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <label className=\"dp-label\">Procedure</label>\r\n                <select className=\"dp-child\">\r\n                    <option>Hernia Repair</option>\r\n                </select>\r\n                <label className=\"dp-label\">Position</label>\r\n                <select className=\"dp-child\">\r\n                    <option>Supine</option>\r\n                </select>\r\n            </div>\r\n\r\n            <Popup />\r\n\r\n            {\r\n                getdata == 0 ? <h1 style={{\r\n                    position: \"relative\",\r\n                    left: \"46%\",\r\n                    width: \"50%\",\r\n                    color: \"burlywood\"\r\n                }}>No records</h1> :\r\n                    // getdata == 0 ? document.getElementById('heading').style.display = 'none' : document.getElementById('heading').style.display = 'block'\r\n\r\n                    (<table className=\"table\" style={{\r\n                        top: \"20px\", left: \"13%\",\r\n                        width: \"77%\", marginBottom: \"72px\"\r\n                    }}>\r\n                        <tbody>\r\n                            {getdata == undefined ? null :\r\n                                <tr id='heading'>\r\n                                    <th>S no</th>\r\n                                    <th>Hospital name</th>\r\n                                    <th>Surgeon name</th>\r\n                                    <th>Preference</th>\r\n                                    <th>size</th>\r\n                                    <th>Port no</th>\r\n                                    <th>Company name</th>\r\n                                    <th>Location</th>\r\n                                </tr>}\r\n                            {\r\n                                getdata && getdata.rows.map((d) => {\r\n                                    return (\r\n                                        <tr className=\"prevstate\">\r\n                                            <td>{d.id}</td>\r\n                                            <td>{d.h}</td>\r\n                                            <td>{d.selected}</td>\r\n                                            <td>{d.G_name}</td>\r\n                                            <td>{d.G_size}</td>\r\n                                            <td>{d.portno}</td>\r\n                                            <td>{d.Company_name}</td>\r\n                                            <td>{d.location}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>)}\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './App.css'\r\nimport { Submit_Page } from './Submit_Page'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { TextField, IconButton, InputLabel } from '@mui/material';\r\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\r\nimport { useHistory } from 'react-router';\r\nexport const Loginpage = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [user, setuser] = useState()\r\n    const [usern, setusern] = useState()\r\n    const [passw, setpassw] = useState()\r\n\r\n    try {\r\n        !user && fetch('/login',{\r\n            method:\"GET\",\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            // body:JSON.stringify(user)\r\n        }).then((res) => {\r\n                res.json().then((d) => {\r\n                    setuser(d);\r\n                    // console.log(d.rows);\r\n                });\r\n            });\r\n    } catch (error) {\r\n        console.log(\"###\",error.message)\r\n    }\r\n        function username(e) {\r\n            setusern(e.target.value)\r\n        }\r\n    function password(e) {\r\n        setpassw(e.target.value)\r\n    }\r\n    console.log(user);\r\n    function clickme() {\r\n        console.log()\r\n        user.rows.map((info) => {\r\n            console.log(info);\r\n            if (usern === info.username && passw === info.password) {\r\n                history.push('/home')\r\n            }\r\n            else {\r\n                document.getElementById('invalid-user').innerHTML = \"Invalid username...\";\r\n                document.getElementById('invalid-password').innerHTML = \"Invalid password...\";\r\n            }\r\n        })\r\n    }\r\n    function back() { window.history.forward(); }\r\n    setTimeout(back(), 0);\r\n    // window.onunload = function () { };\r\n    // window.onbeforeunload = function () {}\r\n    window.history.pushState(null, null, Location.href);\r\n    window.onpopstate = function () {\r\n        window.history.go(1);\r\n    };\r\n    let v = document.getElementById('password');\r\n    function visibility() {\r\n        if (v.type === \"password\") {\r\n            v.type = \"text\"\r\n        } else {\r\n            v.type = \"password\"\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <label id=\"title\">LOG IN</label>\r\n            <div className=\"lable\">\r\n                <label >Username: </label>\r\n                <TextField type=\"text\" name=\"\" placeholder=\"Enter username\" className=\"text\" onChange={username} style={{ marginLeft: '2px' }} />\r\n                <span id=\"invalid-user\" className=\"invalid\"></span>\r\n            </div>\r\n            <div className=\"lable\">\r\n                <label className=\"lable\">Password: </label>\r\n                <TextField type=\"password\" name=\"\" placeholder=\"Enter password\" className=\"text\" onChange={password} id='password' InputProps={{\r\n                    endAdornment: (\r\n                        <IconButton>\r\n                            <VisibilityOutlinedIcon onClick={visibility} style={{ cursor: \"pointer\" }} />\r\n                        </IconButton>\r\n                    )\r\n                }} />\r\n\r\n                <span id=\"invalid-password\" className=\"invalid\"></span>\r\n\r\n            </div>\r\n            <button type=\"submit\" className=\"btn\" onClick={() => clickme()}>Log in</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Submit_Page } from './Submit_Page.jsx';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Anotherpage } from './Another-page';\r\nimport { Loginpage } from './Loginpage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Loginpage} />\r\n          <Route exact path=\"/home\" component={Submit_Page} />\r\n          <Route exact path=\"/detail\" component={Anotherpage} />\r\n        </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter, Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}